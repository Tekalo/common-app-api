---
name: Test and Deploy Dev

on:
  push:
    branches:
      - main
      - 'renovate/**'
    paths-ignore:
      - 'tf/**'
      - '.github/**'
  pull_request:
    paths-ignore:
      - 'tf/**'
      - '.github/**'
    branches-ignore:
      - 'renovate/**'
  workflow_dispatch:

env:
  AUTH0_API_CONFIG: '{"domain": "${{ vars.AUTH0_DOMAIN }}", "clientId": "${{ vars.AUTH0_CLIENT_ID }}", "clientSecret": "${{ secrets.AUTH0_CLIENT_SECRET }}"}'
  AUTH0_EXPRESS_CONFIG: '{"secret": "mysupersecretsecret", "issuer": "https://capp-issuer", "tokenSigningAlg": "HS256", "audience": "auth0.capp.com"}'
  PORT: 3000
  SENTRY_DSN: ${{ vars.SENTRY_DSN }}

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    container:
      image: node:20-slim

    env:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://capp_admin:password@postgres:5432/testdb

    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: capp_admin
          POSTGRES_DB: testdb
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          DATABASE_URL: postgresql://capp_admin:password@postgres:5432/testdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node.js dependencies
        run: pnpm install

      - name: Run linters
        run: ./scripts/lint-command.sh

      - name: Run type checks
        run: pnpm check

      - name: Push Prisma schema
        run: pnpx prisma db push --accept-data-loss

      - name: Run tests
        run: ./scripts/test-command.sh

  build_and_push:
    name: Build and push image
    uses: ./.github/workflows/build-workflow.yml
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    needs:
      - test
    with:
      env: 'dev'

  deploy:
    name: 'Deploy to dev'
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/deploy-image.yml
    needs:
      - build_and_push
    with:
      env: 'dev'
      image: ${{ needs.build_and_push.outputs.image }}
    secrets: inherit
