---
name: Build image

on:
  workflow_call:
    inputs:
      env:
        description: 'Environment to deploy to'
        type: string
        required: true
    outputs:
      image:
        description: 'Built docker image'
        value: ${{ jobs.build_and_push.outputs.image }}

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: capp/api
  DOCKER_BUILDKIT: 1

permissions:
  id-token: write
  contents: read

jobs:
  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.set-vars.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ vars[format('{0}_AWS_PLAN_ROLE', inputs.env)] }}
          role-session-name: GithubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set short github sha variable
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        id: set-vars
        run: |
          GITHUB_SHA_SHORT="$(echo "$GITHUB_SHA" | cut -c 1-7)"
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA_SHORT:?}" >> "$GITHUB_ENV"
          echo "IMAGE_TAG=${GITHUB_SHA_SHORT:?}" >> "$GITHUB_ENV"
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA_SHORT" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: '${{ env.ECR_REPOSITORY }}'

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          load: false
          tags: '${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}'
          target: production
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GITHUB_SHA=${{ github.sha }}
          # disabling provenance because it creates a lot of untagged-seeming images in ECR
          # and we aren't making use of it
          provenance: false
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output sourcemaps
        uses: docker/build-push-action@v5
        with:
          context: .
          target: artifact
          outputs: type=local,dest=./build/

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
        with:
          # TODO: not sure if we should finalize here. Maybe better to do it in the deploy?
          finalize: true
          sourcemaps: ./build
          ignore_missing: true
