name: 'Terraform'

on:
  pull_request:
    paths:
      - 'tf/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      envs: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dev:
              - 'tf/envs/dev/**'
              - 'tf/modules/**'
            # staging:
            #   - 'tf/envs/staging/**'
            #   - 'tf/modules/**'
            # prod:
            #   - 'tf/envs/prod/**'
            #   - 'tf/modules/**'

  plan:
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.changes.outputs.envs) }}
    uses: ./.github/workflows/terraform-plan.yml
    with:
      env: ${{ matrix.env }}
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      AWS_ROLE_TO_ASSUME: "${{ vars[fromJSON('{\"prod\": \"PROD_AWS_PLAN_ROLE\", \"dev\": \"DEV_AWS_PLAN_ROLE\", \"staging\": \"STAGING_AWS_PLAN_ROLE\"}')[matrix.role_id]] }}"

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [plan]
    if: github.event_name == 'pull_request'
    steps:
      - run: 'echo "No further tests required"'
