generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Candidate {
    id          Int           @id @default(autoincrement())
    Application Application[]
}

model Application {
    id Int @id @default(autoincrement())

    candidate   Candidate @relation(fields: [candidateId], references: [id])
    candidateId Int

    name             String
    email            String
    phone            String
    preferredContact String // enum?
    pronoun          String

    dateAdded   DateTime
    attribution String // enum?

    resumeUrl String
    openTo    String // enum?

    lastOrg  String // Current or Most Recent Org   // Link to org??
    lastRole String // Current or Most Recent Role  // enum?
    yoe      Float // Years of Relevant Experience

    linkedInUrl String
    porfolioUrl String
    githubUrl   String

    interestOpportunities String[] // Interested In - Opportunities    //enum? Should be array?
    interestRoles         String[] // Interested In - Roles            //enum? Should be array?
    interestCauses        String[] // Interested In - Impact Causes   //enum? Should be array?
    interestGovt          Boolean // Interested In - Govt

    otherCause String // Additional cause(s) they are interested in   //Array?
    skill      String //Should be array?

    currentLocation String
    openToRelocate  String // Enum?

    desiredSalary     Int
    previousImpact    Boolean
    workAuthorization String // enum?

    essayResponse String
}

model Organization {
    id          Int           @id @default(autoincrement())
    Opportunity Opportunity[]
}

model Opportunity {
    id Int @id @default(autoincrement())

    organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId Int

    orgName String

    dateAdded   DateTime
    attribution String // enum?

    orgType  String //enum?
    industry String //enum?
    orgSize  String //enum?

    contactName  String
    contactEmail String
    contactPhone String

    role            String //enum?
    opportunityType String //enum? Array?
    paid            Boolean
    salaryRange     String
    location        String
    visaSponsorship String //enum?

    desiredStartDate DateTime
    desiredEndDate   DateTime
    desiredYoe       String
    desiredSkill     String //array?
    desiredOther     String //array?
    desiredImpactExp String

    similarStaffed Boolean

    jdUrl String

    essayRole String
    essayHelp String
}
