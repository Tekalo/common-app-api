services:
  postgres:
    extends:
      file: docker-compose.common.yaml
      service: postgres
    environment:
      - POSTGRES_DB=devdb
    ports:
      - "5432:5432"
  api:
    extends:
      file: docker-compose.common.yaml
      service: api
    image: common-app:dev
    build:
      context: .
      target: development
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/devdb
      - "AUTH0_CONFIG={}"
      - PORT=3000
    ports:
      - "3000:3000"
    command: "pnpm debug"
    depends_on:
      - postgres
  test-postgres:
    extends:
      file: docker-compose.common.yaml
      service: postgres
    environment:
      - POSTGRES_DB=testdb
    profiles:
      - test
  test-api:
    extends:
      file: docker-compose.common.yaml
      service: api
    image: common-app:test
    build:
      context: .
      target: test
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@test-postgres:5432/testdb
      - 'AUTH0_CONFIG={domain:"sf-capp-dev.us.auth0.com", clientId: "AzRVLnVmcru9u0hR5dl5VW84c21GLNEM", clientSecret:"CaIlDbCe1j8oN2-qPXKGvV1i7KU8fsxyIaIhgxg9UPgShTNtT0SnKCdDvV4Yf6ex"}'
    profiles:
      - test
    depends_on:
      - test-postgres
    # command: scripts/test-command.sh # TODO: Uncomment when ready to add in testing
        # domain: 'sf-capp-dev.us.auth0.com',
        # clientId: 'AzRVLnVmcru9u0hR5dl5VW84c21GLNEM',
        # clientSecret:
        #   'CaIlDbCe1j8oN2-qPXKGvV1i7KU8fsxyIaIhgxg9UPgShTNtT0SnKCdDvV4Yf6ex', // TODO CONFIG ME
        # scope: 'create:users',