{
  "name": "common-app-api",
  "version": "1.0.0",
  "description": "",
  "type": "module",
  "_scriptsComment": {
    "nodemon quirks": "nodemon only signals and waits on the immediate child process to terminate before restarting, so if the nodemon exec command spawns children, old processes may be left running when new processes start, causing errors like EADDRINUSE. This is why, for example, we don't call 'pnpm build' from nodemon, but instead specify the full command.",
    "debug": "run all debug:* and watch* scripts",
    "debug:watch": "2 seconds after nodemon notices changes to .js files in the build/ folder, start the server",
    "watch:build": "swc watches the src folder, if there's any changes at all, build our .js files + source maps and save them to /build dir",
    "watch:check": "nodemon watches the src folder, if any changes detected on .ts files, re-running the type checker to detect errors (but not generating output files)"
  },
  "engines": {
    "node": ">=20"
  },
  "scripts": {
    "check": "tsc --noEmit",
    "container-build": "docker compose run --rm api pnpm build",
    "build": "pnpm -r --filter ./packages/schemas run build && pnpm check && swc src --source-maps true --copy-files --out-dir build",
    "start": "node ./build/server.js",
    "start:debug": "node --inspect=0.0.0.0:9229 ./build/server.js | pino-pretty -c",
    "dev": "pnpm run -r --parallel --include-workspace-root '/^(watch|dev):.*/'",
    "dev:watch": "nodemon --verbose --delay 2 --watch 'build/**' -e js --exec 'node ./build/server.js'",
    "debug": "pnpm run -r --parallel --include-workspace-root '/^(watch|debug):.*/'",
    "debug:watch": "nodemon --delay 2 --watch 'build/**' -e js --exec 'node --inspect=0.0.0.0:9229 ./build/server.js | pino-pretty -c'",
    "watch:build": "swc src --watch --source-maps true --copy-files --out-dir build",
    "watch:check": "nodemon --watch 'src/**' -e ts --exec 'tsc --noEmit'",
    "container-install": "./scripts/container-install.sh",
    "container-uninstall": "./scripts/container-uninstall.sh",
    "format": "./scripts/prettier.sh",
    "lint": "./scripts/container-lint.sh",
    "lint:fix": "./scripts/lint-fix.sh",
    "preinstall": "npx only-allow pnpm",
    "test": "./scripts/container-test.sh",
    "package:email-sender": "pnpm -r --filter ./packages/email-sender run package",
    "prepare": "husky install",
    "prisma:migrate": "docker compose run --rm api pnpx prisma migrate dev",
    "prisma:seed": "docker compose run --rm api pnpx prisma db seed",
    "prisma:update": "docker compose run --rm api pnpx prisma db push",
    "generate-spec": "docker compose run -T --rm api node --no-warnings=ExperimentalWarning --loader ts-node/esm /api/scripts/writeSpec.ts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/schmidtfutures/common-app-api.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/schmidtfutures/common-app-api/issues"
  },
  "homepage": "https://github.com/schmidtfutures/common-app-api#readme",
  "dependencies": {
    "@aws-sdk/client-s3": "3.454.0",
    "@aws-sdk/client-ses": "3.454.0",
    "@aws-sdk/s3-presigned-post": "3.454.0",
    "@aws-sdk/s3-request-presigner": "3.454.0",
    "@capp/schemas": "workspace:*",
    "@prisma/client": "5.6.0",
    "@quixo3/prisma-session-store": "3.1.13",
    "@sentry/node": "7.80.1",
    "@sentry/types": "7.80.1",
    "@tsconfig/node20": "20.1.2",
    "@types/auth0": "3.3.10",
    "@types/cookie": "0.5.4",
    "auth0": "4.1.0",
    "express": "4.18.2",
    "express-oauth2-jwt-bearer": "1.6.0",
    "express-session": "1.17.3",
    "husky": "8.0.3",
    "jest-mock-extended": "3.0.5",
    "jose": "5.1.1",
    "pino": "8.16.2",
    "pino-http": "8.5.1",
    "swagger-ui-express": "5.0.0",
    "zod": "3.22.4",
    "zod-openapi": "2.11.0"
  },
  "devDependencies": {
    "@jest/globals": "29.7.0",
    "@swc/cli": "0.1.63",
    "@swc/core": "1.3.96",
    "@swc/jest": "0.2.29",
    "@types/aws-lambda": "^8.10.122",
    "@types/cookie-parser": "1.4.6",
    "@types/express": "4.17.21",
    "@types/express-session": "1.17.10",
    "@types/jest": "29.5.9",
    "@types/node": "20.9.3",
    "@types/supertest": "2.0.16",
    "@types/swagger-ui-express": "4.1.6",
    "@typescript-eslint/eslint-plugin": "6.11.0",
    "@typescript-eslint/parser": "6.11.0",
    "cookie": "0.6.0",
    "cookie-parser": "1.4.6",
    "eslint": "8.54.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-airbnb-typescript": "17.1.0",
    "eslint-config-prettier": "9.0.0",
    "eslint-import-resolver-typescript": "3.6.1",
    "eslint-plugin-import": "2.29.0",
    "eslint-plugin-markdownlint": "0.5.0",
    "eslint-plugin-prettier": "5.0.1",
    "jest": "29.7.0",
    "nodemon": "3.0.1",
    "pino-pretty": "10.2.3",
    "prettier": "3.1.0",
    "prisma": "5.6.0",
    "sentry-testkit": "5.0.7",
    "supertest": "6.3.3",
    "ts-node": "10.9.1",
    "typescript": "5.2.2"
  },
  "//": "added to resolve a critical vulnerability in @babel/traverse 7.23.0",
  "peerDependencies": {
    "@babel/core": "7.23.3"
  },
  "prisma": {
    "schema": "db/prisma/schema.prisma",
    "seed": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./db/resources/seed.ts"
  }
}
